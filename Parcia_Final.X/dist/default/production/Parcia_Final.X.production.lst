

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 22 14:16:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.30
    22                           ; Generated 15/09/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F15244 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011B                     	;# 
    90  011C                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  011F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018E                     	;# 
    97  018F                     	;# 
    98  0190                     	;# 
    99  0191                     	;# 
   100  0192                     	;# 
   101  020C                     	;# 
   102  020D                     	;# 
   103  020E                     	;# 
   104  020E                     	;# 
   105  020F                     	;# 
   106  020F                     	;# 
   107  0210                     	;# 
   108  0210                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  028C                     	;# 
   112  028C                     	;# 
   113  028D                     	;# 
   114  028D                     	;# 
   115  028E                     	;# 
   116  028F                     	;# 
   117  0290                     	;# 
   118  0291                     	;# 
   119  030C                     	;# 
   120  030C                     	;# 
   121  030D                     	;# 
   122  030E                     	;# 
   123  030F                     	;# 
   124  0310                     	;# 
   125  0310                     	;# 
   126  0311                     	;# 
   127  0312                     	;# 
   128  0313                     	;# 
   129  0314                     	;# 
   130  0314                     	;# 
   131  0315                     	;# 
   132  0316                     	;# 
   133  0318                     	;# 
   134  0318                     	;# 
   135  0319                     	;# 
   136  031A                     	;# 
   137  059C                     	;# 
   138  059C                     	;# 
   139  059D                     	;# 
   140  059D                     	;# 
   141  059E                     	;# 
   142  059F                     	;# 
   143  070C                     	;# 
   144  070D                     	;# 
   145  070E                     	;# 
   146  0716                     	;# 
   147  0717                     	;# 
   148  0718                     	;# 
   149  080C                     	;# 
   150  0811                     	;# 
   151  0813                     	;# 
   152  0814                     	;# 
   153  081A                     	;# 
   154  081A                     	;# 
   155  081B                     	;# 
   156  081C                     	;# 
   157  081C                     	;# 
   158  081D                     	;# 
   159  081E                     	;# 
   160  081F                     	;# 
   161  088E                     	;# 
   162  0890                     	;# 
   163  0891                     	;# 
   164  0892                     	;# 
   165  0893                     	;# 
   166  090C                     	;# 
   167  1E8F                     	;# 
   168  1E90                     	;# 
   169  1E91                     	;# 
   170  1E92                     	;# 
   171  1E93                     	;# 
   172  1E9C                     	;# 
   173  1EA1                     	;# 
   174  1EA2                     	;# 
   175  1EC3                     	;# 
   176  1EC5                     	;# 
   177  1EC6                     	;# 
   178  1EC7                     	;# 
   179  1ECB                     	;# 
   180  1ECB                     	;# 
   181  1ECB                     	;# 
   182  1ECC                     	;# 
   183  1ECC                     	;# 
   184  1ECC                     	;# 
   185  1F10                     	;# 
   186  1F11                     	;# 
   187  1F12                     	;# 
   188  1F14                     	;# 
   189  1F15                     	;# 
   190  1F1C                     	;# 
   191  1F1D                     	;# 
   192  1F1E                     	;# 
   193  1F1F                     	;# 
   194  1F20                     	;# 
   195  1F21                     	;# 
   196  1F22                     	;# 
   197  1F23                     	;# 
   198  1F24                     	;# 
   199  1F25                     	;# 
   200  1F26                     	;# 
   201  1F27                     	;# 
   202  1F38                     	;# 
   203  1F39                     	;# 
   204  1F3A                     	;# 
   205  1F3B                     	;# 
   206  1F3C                     	;# 
   207  1F3D                     	;# 
   208  1F3E                     	;# 
   209  1F3F                     	;# 
   210  1F43                     	;# 
   211  1F44                     	;# 
   212  1F45                     	;# 
   213  1F46                     	;# 
   214  1F47                     	;# 
   215  1F48                     	;# 
   216  1F49                     	;# 
   217  1F4A                     	;# 
   218  1F4E                     	;# 
   219  1F4F                     	;# 
   220  1F50                     	;# 
   221  1F51                     	;# 
   222  1F52                     	;# 
   223  1F53                     	;# 
   224  1F54                     	;# 
   225  1F55                     	;# 
   226  1FE4                     	;# 
   227  1FE5                     	;# 
   228  1FE6                     	;# 
   229  1FE7                     	;# 
   230  1FE8                     	;# 
   231  1FE8                     	;# 
   232  1FE9                     	;# 
   233  1FEA                     	;# 
   234  1FEB                     	;# 
   235  1FED                     	;# 
   236  1FEE                     	;# 
   237  1FEF                     	;# 
   238                           
   239                           	psect	idataCOMMON
   240  06B5                     __pidataCOMMON:
   241                           
   242                           ;initializer for _dutyCycle75
   243  06B5  34EE               	retlw	238
   244  06B6  3402               	retlw	2
   245                           
   246                           ;initializer for _dutyCycle50
   247  06B7  3400               	retlw	0
   248  06B8  3402               	retlw	2
   249                           
   250                           ;initializer for _dutyCycle25
   251  06B9  3400               	retlw	0
   252  06BA  3401               	retlw	1
   253                           
   254                           ;initializer for _dutyCycle10
   255  06BB  340A               	retlw	10
   256  06BC  3400               	retlw	0
   257                           
   258                           	psect	idataBANK0
   259  06A0                     __pidataBANK0:
   260                           
   261                           ;initializer for _dutyCycle100
   262  06A0  34FF               	retlw	255
   263  06A1  3403               	retlw	3
   264  000E                     _PORTCbits	set	14
   265  0014                     _TRISC	set	20
   266  0013                     _TRISB	set	19
   267  0012                     _TRISA	set	18
   268  001A                     _LATC	set	26
   269  0019                     _LATB	set	25
   270  0018                     _LATA	set	24
   271  00A2                     _TRISC2	set	162
   272  0092                     _TRISA2	set	146
   273  028E                     _T2CON	set	654
   274  028C                     _T2TMR	set	652
   275  028D                     _T2PR	set	653
   276  0291                     _T2RST	set	657
   277  028F                     _T2HLT	set	655
   278  0290                     _T2CLKCON	set	656
   279  0314                     _PWM3DCL	set	788
   280  0315                     _PWM3DCH	set	789
   281  0316                     _PWM3CON	set	790
   282  070D                     _PIR1bits	set	1805
   283  0892                     _OSCTUNE	set	2194
   284  0893                     _OSCFRQ	set	2195
   285  0891                     _OSCEN	set	2193
   286  1F11                     _RA1PPS	set	7953
   287  1F12                     _RA2PPS	set	7954
   288  1F52                     _INLVLC	set	8018
   289  1F47                     _INLVLB	set	8007
   290  1F3C                     _INLVLA	set	7996
   291  1F51                     _SLRCONC	set	8017
   292  1F46                     _SLRCONB	set	8006
   293  1F3B                     _SLRCONA	set	7995
   294  1F50                     _ODCONC	set	8016
   295  1F45                     _ODCONB	set	8005
   296  1F3A                     _ODCONA	set	7994
   297  1F4F                     _WPUC	set	8015
   298  1F39                     _WPUA	set	7993
   299  1F44                     _WPUB	set	8004
   300  1F38                     _ANSELA	set	7992
   301  1F43                     _ANSELB	set	8003
   302  1F4E                     _ANSELC	set	8014
   303  FA7A                     _WPUC2	set	64122
   304                           
   305                           	psect	cinit
   306  07E7                     start_initialization:	
   307                           ; #config settings
   308                           
   309  07E7                     __initialization:
   310                           
   311                           ; Initialize objects allocated to COMMON
   312  07E7  30B5               	movlw	low __pidataCOMMON
   313  07E8  0084               	movwf	4
   314  07E9  3086               	movlw	(high __pidataCOMMON)| (0+128)
   315  07EA  0085               	movwf	5
   316  07EB  3070               	movlw	low __pdataCOMMON
   317  07EC  0086               	movwf	6
   318  07ED  3000               	movlw	high __pdataCOMMON
   319  07EE  0087               	movwf	7
   320  07EF  3008               	movlw	8
   321  07F0  3186  26A7  3187   	fcall	init_ram
   322                           
   323                           ; Initialize objects allocated to BANK0
   324  07F3  3186  26A0  3187   	fcall	__pidataBANK0	;fetch initializer
   325  07F6  00A2               	movwf	__pdataBANK0& (0+127)
   326  07F7  3186  26A1  3187   	fcall	__pidataBANK0+1	;fetch initializer
   327  07FA  00A3               	movwf	(__pdataBANK0+1)& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK0
   330  07FB  01A0               	clrf	__pbssBANK0& (0+127)
   331  07FC  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   332  07FD                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335  07FD                     __end_of__initialization:
   336  07FD  0140               	movlb	0
   337  07FE  3187  2F10         	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	dataCOMMON
   340  0070                     __pdataCOMMON:
   341  0070                     _dutyCycle75:
   342  0070                     	ds	2
   343  0072                     _dutyCycle50:
   344  0072                     	ds	2
   345  0074                     _dutyCycle25:
   346  0074                     	ds	2
   347  0076                     _dutyCycle10:
   348  0076                     	ds	2
   349                           
   350                           	psect	bssBANK0
   351  0020                     __pbssBANK0:
   352  0020                     _my_dutyCycle:
   353  0020                     	ds	2
   354                           
   355                           	psect	dataBANK0
   356  0022                     __pdataBANK0:
   357  0022                     _dutyCycle100:
   358  0022                     	ds	2
   359                           
   360                           	psect	inittext
   361  06A7                     init_ram:
   362  06A7  00FE               	movwf	btemp
   363  06A8                     initloop:
   364  06A8  0012               	moviw fsr0++
   365  06A9  001E               	movwi fsr1++
   366  06AA  0BFE               	decfsz	btemp,f
   367  06AB  2EA8               	goto	initloop
   368  06AC  3400               	retlw	0
   369                           
   370                           	psect	cstackCOMMON
   371  0078                     __pcstackCOMMON:
   372  0078                     ?_PIN_MANAGER_Initialize:
   373  0078                     ??_PIN_MANAGER_Initialize:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0078                     ?_OSCILLATOR_Initialize:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0078                     ??_OSCILLATOR_Initialize:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0078                     ?_TMR2_Initialize:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0078                     ??_TMR2_Initialize:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0078                     ?_PWM3_Initialize:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0078                     ??_PWM3_Initialize:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0078                     ?_PWM3_LoadDutyValue:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0078                     ?_main:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0078                     PWM3_LoadDutyValue@dutyValue:	
   401                           ; 1 bytes @ 0x0
   402                           
   403                           
   404                           ; 2 bytes @ 0x0
   405  0078                     	ds	2
   406  007A                     ??_PWM3_LoadDutyValue:
   407                           
   408                           ; 1 bytes @ 0x2
   409  007A                     	ds	2
   410  007C                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x4
   413  007C                     	ds	1
   414                           
   415                           	psect	maintext
   416  0710                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 153 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B3F/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   436 ;;      Params:         0       0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0
   438 ;;      Temps:          1       0       0       0       0       0       0       0
   439 ;;      Totals:         1       0       0       0       0       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels required when called: 1
   442 ;; This function calls:
   443 ;;		_OSCILLATOR_Initialize
   444 ;;		_PIN_MANAGER_Initialize
   445 ;;		_PWM3_Initialize
   446 ;;		_PWM3_LoadDutyValue
   447 ;;		_TMR2_Initialize
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _main
   455  0710                     _main:
   456  0710                     l821:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   459                           
   460                           
   461                           ;main.c: 155:     PIN_MANAGER_Initialize();
   462  0710  3186  26E1  3187   	fcall	_PIN_MANAGER_Initialize
   463  0713                     l823:
   464                           
   465                           ;main.c: 156:     OSCILLATOR_Initialize();
   466  0713  3186  26A2  3187   	fcall	_OSCILLATOR_Initialize
   467  0716                     l825:
   468                           
   469                           ;main.c: 157:     TMR2_Initialize();
   470  0716  3186  26BD  3187   	fcall	_TMR2_Initialize
   471  0719                     l827:
   472                           
   473                           ;main.c: 158:     PWM3_Initialize();
   474  0719  3186  26AD  3187   	fcall	_PWM3_Initialize
   475  071C                     l829:
   476                           
   477                           ;main.c: 165:     if (PORTCbits.RC2==0){
   478  071C  0140               	movlb	0	; select bank0
   479  071D  190E               	btfsc	14,2	;volatile
   480  071E  2F20               	goto	u71
   481  071F  2F21               	goto	u70
   482  0720                     u71:
   483  0720  2F7C               	goto	l851
   484  0721                     u70:
   485  0721                     l831:
   486                           
   487                           ;main.c: 166:       PWM3_LoadDutyValue(my_dutyCycle);
   488  0721  3000               	movlw	0
   489  0722  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   490  0723  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   491  0724  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   492  0727                     l833:
   493                           
   494                           ;main.c: 167:       _delay((unsigned long)((400)*(1000000/4000.0)));
   495  0727  3082               	movlw	130
   496  0728  00FC               	movwf	??_main
   497  0729  30DE               	movlw	222
   498  072A                     u117:
   499  072A  0B89               	decfsz	9,f
   500  072B  2F2A               	goto	u117
   501  072C  0BFC               	decfsz	??_main,f
   502  072D  2F2A               	goto	u117
   503  072E                     l835:
   504                           
   505                           ;main.c: 168:       PWM3_LoadDutyValue(dutyCycle10);
   506  072E  300A               	movlw	10
   507  072F  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   508  0730  3000               	movlw	0
   509  0731  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   510  0732  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   511                           
   512                           ;main.c: 169:       _delay((unsigned long)((400)*(1000000/4000.0)));
   513  0735  3082               	movlw	130
   514  0736  00FC               	movwf	??_main
   515  0737  30DE               	movlw	222
   516  0738                     u127:
   517  0738  0B89               	decfsz	9,f
   518  0739  2F38               	goto	u127
   519  073A  0BFC               	decfsz	??_main,f
   520  073B  2F38               	goto	u127
   521  073C                     l837:
   522                           
   523                           ;main.c: 170:       PWM3_LoadDutyValue(dutyCycle25);
   524  073C  3000               	movlw	0
   525  073D  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   526  073E  3001               	movlw	1
   527  073F  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   528  0740  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   529  0743                     l839:
   530                           
   531                           ;main.c: 171:       _delay((unsigned long)((400)*(1000000/4000.0)));
   532  0743  3082               	movlw	130
   533  0744  00FC               	movwf	??_main
   534  0745  30DE               	movlw	222
   535  0746                     u137:
   536  0746  0B89               	decfsz	9,f
   537  0747  2F46               	goto	u137
   538  0748  0BFC               	decfsz	??_main,f
   539  0749  2F46               	goto	u137
   540                           
   541                           ;main.c: 172:       PWM3_LoadDutyValue(dutyCycle50);
   542  074A  3000               	movlw	0
   543  074B  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   544  074C  3002               	movlw	2
   545  074D  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   546  074E  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   547  0751                     l841:
   548                           
   549                           ;main.c: 173:        _delay((unsigned long)((400)*(1000000/4000.0)));
   550  0751  3082               	movlw	130
   551  0752  00FC               	movwf	??_main
   552  0753  30DE               	movlw	222
   553  0754                     u147:
   554  0754  0B89               	decfsz	9,f
   555  0755  2F54               	goto	u147
   556  0756  0BFC               	decfsz	??_main,f
   557  0757  2F54               	goto	u147
   558  0758                     l843:
   559                           
   560                           ;main.c: 174:       PWM3_LoadDutyValue(dutyCycle75);
   561  0758  30EE               	movlw	238
   562  0759  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   563  075A  3002               	movlw	2
   564  075B  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   565  075C  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   566                           
   567                           ;main.c: 175:        _delay((unsigned long)((400)*(1000000/4000.0)));
   568  075F  3082               	movlw	130
   569  0760  00FC               	movwf	??_main
   570  0761  30DE               	movlw	222
   571  0762                     u157:
   572  0762  0B89               	decfsz	9,f
   573  0763  2F62               	goto	u157
   574  0764  0BFC               	decfsz	??_main,f
   575  0765  2F62               	goto	u157
   576  0766                     l845:
   577                           
   578                           ;main.c: 176:       PWM3_LoadDutyValue(dutyCycle100);
   579  0766  30FF               	movlw	255
   580  0767  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   581  0768  3003               	movlw	3
   582  0769  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   583  076A  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   584  076D                     l847:
   585                           
   586                           ;main.c: 177:        _delay((unsigned long)((400)*(1000000/4000.0)));
   587  076D  3082               	movlw	130
   588  076E  00FC               	movwf	??_main
   589  076F  30DE               	movlw	222
   590  0770                     u167:
   591  0770  0B89               	decfsz	9,f
   592  0771  2F70               	goto	u167
   593  0772  0BFC               	decfsz	??_main,f
   594  0773  2F70               	goto	u167
   595  0774  2F7C               	goto	l851
   596  0775                     l849:
   597                           
   598                           ;main.c: 180:         PWM3_LoadDutyValue(dutyCycle100);
   599  0775  30FF               	movlw	255
   600  0776  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   601  0777  3003               	movlw	3
   602  0778  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   603  0779  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   604  077C                     l851:
   605                           
   606                           ;main.c: 179:     while(PORTCbits.RC2==0){
   607  077C  0140               	movlb	0	; select bank0
   608  077D  1D0E               	btfss	14,2	;volatile
   609  077E  2F80               	goto	u81
   610  077F  2F81               	goto	u80
   611  0780                     u81:
   612  0780  2F75               	goto	l849
   613  0781                     u80:
   614  0781                     l118:
   615                           
   616                           ;main.c: 182:     if (PORTCbits.RC2==1){
   617  0781  1D0E               	btfss	14,2	;volatile
   618  0782  2F84               	goto	u91
   619  0783  2F85               	goto	u90
   620  0784                     u91:
   621  0784  2FDF               	goto	l873
   622  0785                     u90:
   623  0785                     l853:
   624                           
   625                           ;main.c: 183:       PWM3_LoadDutyValue(dutyCycle100);
   626  0785  30FF               	movlw	255
   627  0786  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   628  0787  3003               	movlw	3
   629  0788  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   630  0789  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   631  078C                     l855:
   632                           
   633                           ;main.c: 184:       _delay((unsigned long)((400)*(1000000/4000.0)));
   634  078C  3082               	movlw	130
   635  078D  00FC               	movwf	??_main
   636  078E  30DE               	movlw	222
   637  078F                     u177:
   638  078F  0B89               	decfsz	9,f
   639  0790  2F8F               	goto	u177
   640  0791  0BFC               	decfsz	??_main,f
   641  0792  2F8F               	goto	u177
   642  0793                     l857:
   643                           
   644                           ;main.c: 185:       PWM3_LoadDutyValue(dutyCycle75);
   645  0793  30EE               	movlw	238
   646  0794  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   647  0795  3002               	movlw	2
   648  0796  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   649  0797  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   650                           
   651                           ;main.c: 186:       _delay((unsigned long)((400)*(1000000/4000.0)));
   652  079A  3082               	movlw	130
   653  079B  00FC               	movwf	??_main
   654  079C  30DE               	movlw	222
   655  079D                     u187:
   656  079D  0B89               	decfsz	9,f
   657  079E  2F9D               	goto	u187
   658  079F  0BFC               	decfsz	??_main,f
   659  07A0  2F9D               	goto	u187
   660  07A1                     l859:
   661                           
   662                           ;main.c: 187:       PWM3_LoadDutyValue(dutyCycle50);
   663  07A1  3000               	movlw	0
   664  07A2  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   665  07A3  3002               	movlw	2
   666  07A4  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   667  07A5  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   668  07A8                     l861:
   669                           
   670                           ;main.c: 188:       _delay((unsigned long)((400)*(1000000/4000.0)));
   671  07A8  3082               	movlw	130
   672  07A9  00FC               	movwf	??_main
   673  07AA  30DE               	movlw	222
   674  07AB                     u197:
   675  07AB  0B89               	decfsz	9,f
   676  07AC  2FAB               	goto	u197
   677  07AD  0BFC               	decfsz	??_main,f
   678  07AE  2FAB               	goto	u197
   679                           
   680                           ;main.c: 189:       PWM3_LoadDutyValue(dutyCycle25);
   681  07AF  3000               	movlw	0
   682  07B0  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   683  07B1  3001               	movlw	1
   684  07B2  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   685  07B3  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   686  07B6                     l863:
   687                           
   688                           ;main.c: 190:       _delay((unsigned long)((400)*(1000000/4000.0)));
   689  07B6  3082               	movlw	130
   690  07B7  00FC               	movwf	??_main
   691  07B8  30DE               	movlw	222
   692  07B9                     u207:
   693  07B9  0B89               	decfsz	9,f
   694  07BA  2FB9               	goto	u207
   695  07BB  0BFC               	decfsz	??_main,f
   696  07BC  2FB9               	goto	u207
   697  07BD                     l865:
   698                           
   699                           ;main.c: 191:       PWM3_LoadDutyValue(dutyCycle10);
   700  07BD  300A               	movlw	10
   701  07BE  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   702  07BF  3000               	movlw	0
   703  07C0  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   704  07C1  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   705                           
   706                           ;main.c: 192:       _delay((unsigned long)((400)*(1000000/4000.0)));
   707  07C4  3082               	movlw	130
   708  07C5  00FC               	movwf	??_main
   709  07C6  30DE               	movlw	222
   710  07C7                     u217:
   711  07C7  0B89               	decfsz	9,f
   712  07C8  2FC7               	goto	u217
   713  07C9  0BFC               	decfsz	??_main,f
   714  07CA  2FC7               	goto	u217
   715  07CB                     l867:
   716                           
   717                           ;main.c: 193:       PWM3_LoadDutyValue(my_dutyCycle);
   718  07CB  3000               	movlw	0
   719  07CC  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   720  07CD  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   721  07CE  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   722  07D1                     l869:
   723                           
   724                           ;main.c: 194:       _delay((unsigned long)((400)*(1000000/4000.0)));
   725  07D1  3082               	movlw	130
   726  07D2  00FC               	movwf	??_main
   727  07D3  30DE               	movlw	222
   728  07D4                     u227:
   729  07D4  0B89               	decfsz	9,f
   730  07D5  2FD4               	goto	u227
   731  07D6  0BFC               	decfsz	??_main,f
   732  07D7  2FD4               	goto	u227
   733  07D8  2FDF               	goto	l873
   734  07D9                     l871:
   735                           
   736                           ;main.c: 197:         PWM3_LoadDutyValue(my_dutyCycle);
   737  07D9  3000               	movlw	0
   738  07DA  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   739  07DB  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   740  07DC  3186  26CB  3187   	fcall	_PWM3_LoadDutyValue
   741  07DF                     l873:
   742                           
   743                           ;main.c: 196:     while(PORTCbits.RC2==1){
   744  07DF  0140               	movlb	0	; select bank0
   745  07E0  190E               	btfsc	14,2	;volatile
   746  07E1  2FE3               	goto	u101
   747  07E2  2FE4               	goto	u100
   748  07E3                     u101:
   749  07E3  2FD9               	goto	l871
   750  07E4                     u100:
   751  07E4  2F1C               	goto	l829
   752  07E5  3180  2802         	ljmp	start
   753  07E7                     __end_of_main:
   754                           
   755                           	psect	text1
   756  06BD                     __ptext1:	
   757 ;; *************** function _TMR2_Initialize *****************
   758 ;; Defined at:
   759 ;;		line 122 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   773 ;;      Params:         0       0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _TMR2_Initialize
   788  06BD                     _TMR2_Initialize:
   789  06BD                     l805:	
   790                           ;incstack = 0
   791                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   792                           
   793                           
   794                           ;main.c: 124:     T2CLKCON = 0x01;
   795  06BD  3001               	movlw	1
   796  06BE  0145               	movlb	5	; select bank5
   797  06BF  0090               	movwf	16	;volatile
   798  06C0                     l807:
   799                           
   800                           ;main.c: 125:     T2HLT = 0x00;
   801  06C0  018F               	clrf	15	;volatile
   802  06C1                     l809:
   803                           
   804                           ;main.c: 126:     T2RST = 0x00;
   805  06C1  0191               	clrf	17	;volatile
   806                           
   807                           ;main.c: 127:     T2PR = 249;
   808  06C2  30F9               	movlw	249
   809  06C3  008D               	movwf	13	;volatile
   810  06C4                     l811:
   811                           
   812                           ;main.c: 128:     T2TMR = 0x00;
   813  06C4  018C               	clrf	12	;volatile
   814  06C5                     l813:
   815                           
   816                           ;main.c: 129:     PIR1bits.TMR2IF = 0;
   817  06C5  014E               	movlb	14	; select bank14
   818  06C6  130D               	bcf	13,6	;volatile
   819  06C7                     l815:
   820                           
   821                           ;main.c: 130:     T2CON = 0b10000000;
   822  06C7  3080               	movlw	128
   823  06C8  0145               	movlb	5	; select bank5
   824  06C9  008E               	movwf	14	;volatile
   825  06CA                     l103:
   826  06CA  0008               	return
   827  06CB                     __end_of_TMR2_Initialize:
   828                           
   829                           	psect	text2
   830  06CB                     __ptext2:	
   831 ;; *************** function _PWM3_LoadDutyValue *****************
   832 ;; Defined at:
   833 ;;		line 142 in file "main.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  dutyValue       2    0[COMMON] unsigned short 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   847 ;;      Params:         2       0       0       0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0
   849 ;;      Temps:          2       0       0       0       0       0       0       0
   850 ;;      Totals:         4       0       0       0       0       0       0       0
   851 ;;Total ram usage:        4 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _PWM3_LoadDutyValue
   862  06CB                     _PWM3_LoadDutyValue:
   863  06CB                     l819:	
   864                           ;incstack = 0
   865                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
   866                           
   867                           
   868                           ;main.c: 142:  void PWM3_LoadDutyValue(uint16_t dutyValue);main.c: 143:     {;main.c: 14
      +                          4:         PWM3DCH = (dutyValue & 0x03FC)>>2;
   869  06CB  0879               	movf	PWM3_LoadDutyValue@dutyValue+1,w
   870  06CC  00FB               	movwf	??_PWM3_LoadDutyValue+1
   871  06CD  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   872  06CE  00FA               	movwf	??_PWM3_LoadDutyValue
   873  06CF  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   874  06D0  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   875  06D1  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   876  06D2  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   877  06D3  087A               	movf	??_PWM3_LoadDutyValue,w
   878  06D4  0146               	movlb	6	; select bank6
   879  06D5  0095               	movwf	21	;volatile
   880                           
   881                           ;main.c: 145:         PWM3DCL = (dutyValue & 0x0003)<<6;
   882  06D6  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   883  06D7  3903               	andlw	3
   884  06D8  00FA               	movwf	??_PWM3_LoadDutyValue
   885  06D9  3005               	movlw	5
   886  06DA                     u65:
   887  06DA  35FA               	lslf	??_PWM3_LoadDutyValue,f
   888  06DB  3EFF               	addlw	-1
   889  06DC  1D03               	skipz
   890  06DD  2EDA               	goto	u65
   891  06DE  357A               	lslf	??_PWM3_LoadDutyValue,w
   892  06DF  0094               	movwf	20	;volatile
   893  06E0                     l109:
   894  06E0  0008               	return
   895  06E1                     __end_of_PWM3_LoadDutyValue:
   896                           
   897                           	psect	text3
   898  06AD                     __ptext3:	
   899 ;; *************** function _PWM3_Initialize *****************
   900 ;; Defined at:
   901 ;;		line 133 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   915 ;;      Params:         0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _PWM3_Initialize
   930  06AD                     _PWM3_Initialize:
   931  06AD                     l817:	
   932                           ;incstack = 0
   933                           ; Regs used in _PWM3_Initialize: [wreg]
   934                           
   935                           
   936                           ;main.c: 135:     PWM3CON = 0x90;
   937  06AD  3090               	movlw	144
   938  06AE  0146               	movlb	6	; select bank6
   939  06AF  0096               	movwf	22	;volatile
   940                           
   941                           ;main.c: 136:     PWM3DCH = 0x3E;
   942  06B0  303E               	movlw	62
   943  06B1  0095               	movwf	21	;volatile
   944                           
   945                           ;main.c: 137:     PWM3DCL = 0x40;
   946  06B2  3040               	movlw	64
   947  06B3  0094               	movwf	20	;volatile
   948  06B4                     l106:
   949  06B4  0008               	return
   950  06B5                     __end_of_PWM3_Initialize:
   951                           
   952                           	psect	text4
   953  06E1                     __ptext4:	
   954 ;; *************** function _PIN_MANAGER_Initialize *****************
   955 ;; Defined at:
   956 ;;		line 67 in file "main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   970 ;;      Params:         0       0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _PIN_MANAGER_Initialize
   985  06E1                     _PIN_MANAGER_Initialize:
   986  06E1                     l763:	
   987                           ;incstack = 0
   988                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   989                           
   990                           
   991                           ;main.c: 70:     LATA = 0x00;
   992  06E1  0140               	movlb	0	; select bank0
   993  06E2  0198               	clrf	24	;volatile
   994                           
   995                           ;main.c: 71:     LATB = 0x00;
   996  06E3  0199               	clrf	25	;volatile
   997                           
   998                           ;main.c: 72:     LATC = 0x00;
   999  06E4  019A               	clrf	26	;volatile
  1000  06E5                     l765:
  1001                           
  1002                           ;main.c: 75:     TRISA = 0x3B;
  1003  06E5  303B               	movlw	59
  1004  06E6  0092               	movwf	18	;volatile
  1005  06E7                     l767:
  1006                           
  1007                           ;main.c: 76:     TRISB = 0xF0;
  1008  06E7  30F0               	movlw	240
  1009  06E8  0093               	movwf	19	;volatile
  1010  06E9                     l769:
  1011                           
  1012                           ;main.c: 77:     TRISC = 0xFF;
  1013  06E9  30FF               	movlw	255
  1014  06EA  0094               	movwf	20	;volatile
  1015  06EB                     l771:
  1016                           
  1017                           ;main.c: 80:     ANSELC = 0xFB;
  1018  06EB  30FB               	movlw	251
  1019  06EC  017E               	movlb	62	; select bank62
  1020  06ED  00CE               	movwf	78	;volatile
  1021  06EE                     l773:
  1022                           
  1023                           ;main.c: 81:     ANSELB = 0xF0;
  1024  06EE  30F0               	movlw	240
  1025  06EF  00C3               	movwf	67	;volatile
  1026  06F0                     l775:
  1027                           
  1028                           ;main.c: 82:     ANSELA = 0x33;
  1029  06F0  3033               	movlw	51
  1030  06F1  00B8               	movwf	56	;volatile
  1031                           
  1032                           ;main.c: 85:     WPUB = 0x00;
  1033  06F2  01C4               	clrf	68	;volatile
  1034  06F3                     l777:
  1035                           
  1036                           ;main.c: 86:     WPUA = 0x04;
  1037  06F3  3004               	movlw	4
  1038  06F4  00B9               	movwf	57	;volatile
  1039  06F5                     l779:
  1040                           
  1041                           ;main.c: 87:     WPUC = 0x04;
  1042  06F5  3004               	movlw	4
  1043  06F6  00CF               	movwf	79	;volatile
  1044                           
  1045                           ;main.c: 90:     ODCONA = 0x00;
  1046  06F7  01BA               	clrf	58	;volatile
  1047                           
  1048                           ;main.c: 91:     ODCONB = 0x00;
  1049  06F8  01C5               	clrf	69	;volatile
  1050                           
  1051                           ;main.c: 92:     ODCONC = 0x00;
  1052  06F9  01D0               	clrf	80	;volatile
  1053  06FA                     l781:
  1054                           
  1055                           ;main.c: 95:     SLRCONA = 0x37;
  1056  06FA  3037               	movlw	55
  1057  06FB  00BB               	movwf	59	;volatile
  1058  06FC                     l783:
  1059                           
  1060                           ;main.c: 96:     SLRCONB = 0xF0;
  1061  06FC  30F0               	movlw	240
  1062  06FD  00C6               	movwf	70	;volatile
  1063  06FE                     l785:
  1064                           
  1065                           ;main.c: 97:     SLRCONC = 0xFF;
  1066  06FE  30FF               	movlw	255
  1067  06FF  00D1               	movwf	81	;volatile
  1068  0700                     l787:
  1069                           
  1070                           ;main.c: 100:     INLVLA = 0x3F;
  1071  0700  303F               	movlw	63
  1072  0701  00BC               	movwf	60	;volatile
  1073  0702                     l789:
  1074                           
  1075                           ;main.c: 101:     INLVLB = 0xF0;
  1076  0702  30F0               	movlw	240
  1077  0703  00C7               	movwf	71	;volatile
  1078  0704                     l791:
  1079                           
  1080                           ;main.c: 102:     INLVLC = 0xFF;
  1081  0704  30FF               	movlw	255
  1082  0705  00D2               	movwf	82	;volatile
  1083  0706                     l793:
  1084                           
  1085                           ;main.c: 105:     TRISA2 = 0;
  1086  0706  0140               	movlb	0	; select bank0
  1087  0707  1112               	bcf	18,2	;volatile
  1088  0708                     l795:
  1089                           
  1090                           ;main.c: 106:     TRISC2 = 1;
  1091  0708  1514               	bsf	20,2	;volatile
  1092  0709                     l797:
  1093                           
  1094                           ;main.c: 107:     WPUC2 = 1;
  1095  0709  017E               	movlb	62	; select bank62
  1096  070A  154F               	bsf	79,2	;volatile
  1097  070B                     l799:
  1098                           
  1099                           ;main.c: 109:     RA2PPS = 0x03;
  1100  070B  3003               	movlw	3
  1101  070C  0092               	movwf	18	;volatile
  1102  070D                     l801:
  1103                           
  1104                           ;main.c: 110:     RA1PPS = 0x04;
  1105  070D  3004               	movlw	4
  1106  070E  0091               	movwf	17	;volatile
  1107  070F                     l97:
  1108  070F  0008               	return
  1109  0710                     __end_of_PIN_MANAGER_Initialize:
  1110                           
  1111                           	psect	text5
  1112  06A2                     __ptext5:	
  1113 ;; *************** function _OSCILLATOR_Initialize *****************
  1114 ;; Defined at:
  1115 ;;		line 115 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		status,2
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1129 ;;      Params:         0       0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _OSCILLATOR_Initialize
  1144  06A2                     _OSCILLATOR_Initialize:
  1145  06A2                     l803:	
  1146                           ;incstack = 0
  1147                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  1148                           
  1149                           
  1150                           ;main.c: 117:     OSCEN = 0x00;
  1151  06A2  0151               	movlb	17	; select bank17
  1152  06A3  0191               	clrf	17	;volatile
  1153                           
  1154                           ;main.c: 118:     OSCFRQ = 0x00;
  1155  06A4  0193               	clrf	19	;volatile
  1156                           
  1157                           ;main.c: 119:     OSCTUNE = 0x00;
  1158  06A5  0192               	clrf	18	;volatile
  1159  06A6                     l100:
  1160  06A6  0008               	return
  1161  06A7                     __end_of_OSCILLATOR_Initialize:
  1162  007E                     btemp	set	126	;btemp
  1163  007E                     wtemp0	set	126
  1164                           
  1165                           	psect	config
  1166                           
  1167                           ;Config register CONFIG1 @ 0x8007
  1168                           ;	External Oscillator Mode Selection bits
  1169                           ;	FEXTOSC = OFF, Oscillator not enabled
  1170                           ;	Power-up Default Value for COSC bits
  1171                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  1172                           ;	Clock Out Enable bit
  1173                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  1174                           ;	VDD Range Analog Calibration Selection bit
  1175                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  1176  8007                     	org	32775
  1177  8007  3FED               	dw	16365
  1178                           
  1179                           ;Config register CONFIG2 @ 0x8008
  1180                           ;	Master Clear Enable bit
  1181                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1182                           ;	Power-up Timer Selection bits
  1183                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1184                           ;	WDT Operating Mode bits
  1185                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  1186                           ;	Brown-out Reset Enable bits
  1187                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  1188                           ;	Brown-out Reset Voltage Selection bit
  1189                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1190                           ;	PPSLOCKED One-Way Set Enable bit
  1191                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  1192                           ;	Stack Overflow/Underflow Reset Enable bit
  1193                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1194  8008                     	org	32776
  1195  8008  3FE7               	dw	16359
  1196                           
  1197                           ;Config register CONFIG4 @ 0x800A
  1198                           ;	Boot Block Size Selection bits
  1199                           ;	BBSIZE = BB512, 512 words boot block size
  1200                           ;	Boot Block Enable bit
  1201                           ;	BBEN = OFF, Boot Block is disabled
  1202                           ;	SAF Enable bit
  1203                           ;	SAFEN = OFF, SAF is disabled
  1204                           ;	Application Block Write Protection bit
  1205                           ;	WRTAPP = OFF, Application Block is not write-protected
  1206                           ;	Boot Block Write Protection bit
  1207                           ;	WRTB = OFF, Boot Block is not write-protected
  1208                           ;	Configuration Registers Write Protection bit
  1209                           ;	WRTC = OFF, Configuration Registers are not write-protected
  1210                           ;	Storage Area Flash (SAF) Write Protection bit
  1211                           ;	WRTSAF = OFF, SAF is not write-protected
  1212                           ;	Low Voltage Programming Enable bit
  1213                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  1214  800A                     	org	32778
  1215  800A  3FFF               	dw	16383
  1216                           
  1217                           ;Config register CONFIG5 @ 0x800B
  1218                           ;	User Program Flash Memory Code Protection bit
  1219                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  1220  800B                     	org	32779
  1221  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM3_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1108
                                              4 COMMON     1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                 _PWM3_LoadDutyValue
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2    1108
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM3_Initialize
   _PWM3_LoadDutyValue
   _TMR2_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      11       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      11      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 22 14:16:36 2021

                             l97 070F                               u70 0721                               u71 0720  
                             u80 0781                               u65 06DA                               u81 0780  
                             u90 0785                               u91 0784                              l100 06A6  
                            l103 06CA                              l106 06B4                              l109 06E0  
                            l118 0781                              l801 070D                              l803 06A2  
                            l811 06C4                              l813 06C5                              l805 06BD  
                            l821 0710                              l815 06C7                              l807 06C0  
                            l831 0721                              l823 0713                              l817 06AD  
                            l809 06C1                              l841 0751                              l833 0727  
                            l825 0716                              l771 06EB                              l763 06E1  
                            l819 06CB                              l843 0758                              l835 072E  
                            l851 077C                              l827 0719                              l781 06FA  
                            l773 06EE                              l765 06E5                              l861 07A8  
                            l853 0785                              l845 0766                              l837 073C  
                            l829 071C                              l791 0704                              l783 06FC  
                            l775 06F0                              l767 06E7                              l871 07D9  
                            l863 07B6                              l855 078C                              l847 076D  
                            l839 0743                              l793 0706                              l785 06FE  
                            l777 06F3                              l769 06E9                              l865 07BD  
                            l857 0793                              l873 07DF                              l849 0775  
                            l795 0708                              l787 0700                              l779 06F5  
                            l867 07CB                              l859 07A1                              l797 0709  
                            l789 0702                              l869 07D1                              l799 070B  
                            u100 07E4                              u101 07E3                              u117 072A  
                            u207 07B9                              u127 0738                              u217 07C7  
                            u137 0746                              u227 07D4                              u147 0754  
                            u157 0762                              u167 0770                              u177 078F  
                            u187 079D                              u197 07AB                  _TMR2_Initialize 06BD  
                            wreg 0009                             _LATA 0018                             _LATB 0019  
                           _LATC 001A                             _T2PR 028D                             _WPUA 1F39  
                           _WPUB 1F44                             _WPUC 1F4F                             _main 0710  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           fsr1l 0006                             btemp 007E                             start 0002  
 __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 06A7                            ?_main 0078  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                            _OSCEN 0891                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            _WPUC2 FA7A  
        __end_of_PWM3_Initialize 06B5                            wtemp0 007E                  __initialization 07E7  
                   __end_of_main 07E7          __end_of_TMR2_Initialize 06CB                           ??_main 007C  
                         _ANSELA 1F38                           _ANSELB 1F43                           _ANSELC 1F4E  
                         _RA1PPS 1F11                           _RA2PPS 1F12                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           _OSCFRQ 0893  
                         _TRISA2 0092                           _TRISC2 00A2      __size_of_PWM3_LoadDutyValue 0016  
                   __pdataCOMMON 0070                 ?_PWM3_Initialize 0078          __end_of__initialization 07FD  
                 __pcstackCOMMON 0078                     __pidataBANK0 06A0                 ?_TMR2_Initialize 0078  
                     __pbssBANK0 0020                       __pmaintext 0710                          _OSCTUNE 0892  
                        _PWM3DCH 0315                          _PWM3DCL 0314                          _PWM3CON 0316  
                        _SLRCONA 1F3B                          _SLRCONB 1F46                          _SLRCONC 1F51  
                        __ptext1 06BD                          __ptext2 06CB                          __ptext3 06AD  
                        __ptext4 06E1                          __ptext5 06A2            _OSCILLATOR_Initialize 06A2  
       ??_PIN_MANAGER_Initialize 0078             end_of_initialization 07FD                          init_ram 06A7  
                        initloop 06A8                        _PORTCbits 000E       __end_of_PWM3_LoadDutyValue 06E1  
                  __pidataCOMMON 06B5           ?_OSCILLATOR_Initialize 0078              start_initialization 07E7  
__size_of_PIN_MANAGER_Initialize 002F         __size_of_PWM3_Initialize 0008                      __pdataBANK0 0022  
                      ___latbits 0001         __size_of_TMR2_Initialize 000E                     _dutyCycle100 0022  
         _PIN_MANAGER_Initialize 06E1                         _T2CLKCON 0290                         _PIR1bits 070D  
              ??_PWM3_Initialize 0078                ??_TMR2_Initialize 0078          ??_OSCILLATOR_Initialize 0078  
             _PWM3_LoadDutyValue 06CB                      _dutyCycle10 0076                      _dutyCycle25 0074  
                    _dutyCycle50 0072                      _dutyCycle75 0070              ?_PWM3_LoadDutyValue 0078  
                  __size_of_main 00D7             ??_PWM3_LoadDutyValue 007A                     _my_dutyCycle 0020  
        ?_PIN_MANAGER_Initialize 0078      PWM3_LoadDutyValue@dutyValue 0078   __end_of_PIN_MANAGER_Initialize 0710  
                _PWM3_Initialize 06AD  
